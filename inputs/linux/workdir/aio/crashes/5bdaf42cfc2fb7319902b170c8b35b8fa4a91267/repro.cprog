// autogenerated by syzkaller (https://github.com/google/syzkaller)

#define _GNU_SOURCE 

#include <endian.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/syscall.h>
#include <sys/types.h>
#include <unistd.h>

uint64_t r[2] = {0x0, 0xffffffffffffffff};

int main(void)
{
		syscall(__NR_mmap, 0x20000000ul, 0x1000000ul, 3ul, 0x32ul, -1, 0ul);
				intptr_t res = 0;
	res = syscall(__NR_io_setup, 0xfff, 0x20000040ul);
	if (res != -1)
r[0] = *(uint64_t*)0x20000040;
memcpy((void*)0x200001c0, "/dev/zero\000", 10);
	res = syscall(__NR_openat, 0xffffffffffffff9cul, 0x200001c0ul, 0ul, 0ul);
	if (res != -1)
		r[1] = res;
*(uint64_t*)0x20000400 = 0x200002c0;
*(uint64_t*)0x200002c0 = 0;
*(uint32_t*)0x200002c8 = 0;
*(uint32_t*)0x200002cc = 0;
*(uint16_t*)0x200002d0 = 7;
*(uint16_t*)0x200002d2 = 0;
*(uint32_t*)0x200002d4 = r[1];
*(uint64_t*)0x200002d8 = 0x20000200;
memcpy((void*)0x20000200, "|", 1);
*(uint64_t*)0x200002e0 = 0xf;
*(uint64_t*)0x200002e8 = 0;
*(uint64_t*)0x200002f0 = 0;
*(uint32_t*)0x200002f8 = 0;
*(uint32_t*)0x200002fc = -1;
	syscall(__NR_io_submit, r[0], 1ul, 0x20000400ul);
	return 0;
}
