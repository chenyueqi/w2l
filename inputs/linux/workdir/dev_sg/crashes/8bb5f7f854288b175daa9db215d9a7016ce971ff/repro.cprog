// autogenerated by syzkaller (https://github.com/google/syzkaller)

#define _GNU_SOURCE 

#include <endian.h>
#include <fcntl.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/stat.h>
#include <sys/syscall.h>
#include <sys/types.h>
#include <unistd.h>

static long syz_open_dev(volatile long a0, volatile long a1, volatile long a2)
{
	if (a0 == 0xc || a0 == 0xb) {
		char buf[128];
		sprintf(buf, "/dev/%s/%d:%d", a0 == 0xc ? "char" : "block", (uint8_t)a1, (uint8_t)a2);
		return open(buf, O_RDWR, 0);
	} else {
		char buf[1024];
		char* hash;
strncpy(buf, (char*)a0, sizeof(buf) - 1);
		buf[sizeof(buf) - 1] = 0;
		while ((hash = strchr(buf, '#'))) {
			*hash = '0' + (char)(a1 % 10);
			a1 /= 10;
		}
		return open(buf, a2, 0);
	}
}

uint64_t r[1] = {0xffffffffffffffff};

int main(void)
{
		syscall(__NR_mmap, 0x20000000ul, 0x1000000ul, 3ul, 0x32ul, -1, 0ul);
				intptr_t res = 0;
memcpy((void*)0x20000880, "/dev/sg#\000", 9);
	res = syz_open_dev(0x20000880, 0, 2);
	if (res != -1)
		r[0] = res;
*(uint16_t*)0x20002980 = 0xcc;
*(uint8_t*)0x20002982 = 0x3f;
*(uint8_t*)0x20002983 = 0;
*(uint32_t*)0x20002984 = 0x2ce;
*(uint32_t*)0x20002988 = 0x3b;
*(uint32_t*)0x2000298c = 0x283;
*(uint32_t*)0x20002990 = 0xc0;
*(uint32_t*)0x20002994 = 0x7fff;
*(uint32_t*)0x20002998 = 0;
*(uint32_t*)0x2000299c = 0;
memcpy((void*)0x200029a0, "\x7a\x22\x09\x1a\xeb\x21\xec\x73\xa2\x91\xf4\x95\xf1\xef\xdf\xc1\xf2\xba\xe0\x97\xc2\x9b\x4e\x91\x92\xcc\xdf\xba\x98\xb3\x4e\x50\x2f\xa4\x37\xeb\xa6\x7a\x01\x24\x65\x5e\x0a\xf3\xee\xbd\xdf\x18\xb5\x3c\xfb\xbf\x08\x80\xe9\x9b\x31\x27\x82\x1d\x3f\x75\x65\xde\x52\x1b\x6d\x23\x99\xf0\x4c\x3b\xbd\x2f\x5b\x6b\x29\xf1\xb4\x15\x10\x96\x4c\x75\x57\x1c\x66\xdb\xd8\x84\xa6\xcf\x30\xcc\x9c\x76\x7e\x37\x4f\xe9\xbd\xee\xbc\x7e\x4e\x45\x9a\x60\x76\x86\x13\x46\xa1\x9e\x31\xd6\x74\x4a\xb2\x11\xe8\x5e\xd7\x08\x87\xeb\xe3\xbf\x4c\xde\xfe\xe9\x65\xfc\x4d\xd6\x66\xe1\x88\x7a\x13\x40\xf0\x39\x22\x0c", 146);
	syscall(__NR_write, r[0], 0x20002980ul, 0xb2ul);
	syscall(__NR_read, r[0], 0x20000000ul, 0xfaul);
	return 0;
}
